version: "1.0"
metadata:
  name: script-from-file
  description: Test workflow for running scripts from external files
  author: lacquer-team

requirements:
  runtimes:
    - name: python
      version: "3.9"

workflow:
  inputs:
    sample_text:
      type: string
      description: Text to analyze
      default: "Hello World 123 Testing Script Execution!"
    
    numbers:
      type: array
      description: Array of numbers to process
      default: [10, 20, 30, 40, 50]
    
    math_operation:
      type: string
      description: Mathematical operation to perform
      default: "average"

  steps:
    - id: analyze_text_basic
      run: "./scripts/text_analyzer.sh"
      with:
        text: "{{ inputs.sample_text }}"
        analysis_type: "basic"
      outputs:
        word_count:
          type: number
          description: Number of words
        character_count:
          type: number
          description: Number of characters
        line_count:
          type: number
          description: Number of lines
        analysis_type:
          type: string
          description: Type of analysis performed
        original_text:
          type: string
          description: The original text

    - id: analyze_text_detailed
      run: "./scripts/text_analyzer.sh"
      with:
        text: "{{ inputs.sample_text }}"
        analysis_type: "detailed"
      outputs:
        word_count:
          type: number
          description: Number of words
        character_count:
          type: number
          description: Number of characters
        unique_words:
          type: number
          description: Number of unique words
        has_numbers:
          type: boolean
          description: Whether text contains numbers
        is_uppercase:
          type: boolean
          description: Whether text is all uppercase

    - id: process_numbers
      run: "./scripts/data_processor.py"
      with:
        data: "{{ inputs.numbers }}"
        operation: "{{ inputs.math_operation }}"
      outputs:
        value:
          type: number
          description: Calculated value
        operation:
          type: string
          description: Operation performed
        input_count:
          type: number
          description: Number of input values
        input_data:
          type: array
          description: Original input data

    - id: process_numbers_sum
      run: "./scripts/data_processor.py"
      with:
        data: "{{ inputs.numbers }}"
        operation: "sum"
      outputs:
        value:
          type: number
          description: Sum of all numbers
        operation:
          type: string
          description: Operation performed

    - id: create_summary
      run: |
        #!/bin/bash
        text_words="$1"
        text_chars="$2"
        unique_words="$3"
        has_numbers="$4"
        calculated_value="$5"
        sum_value="$6"
        
        echo "{
          \"text_analysis\": {
            \"total_words\": $text_words,
            \"total_characters\": $text_chars,
            \"unique_words\": $unique_words,
            \"contains_numbers\": $has_numbers
          },
          \"number_analysis\": {
            \"calculated_result\": $calculated_value,
            \"sum_result\": $sum_value
          },
          \"summary\": \"Analyzed text with $text_words words and processed numbers with result $calculated_value\"
        }"
      with:
        text_words: "{{ steps.analyze_text_detailed.outputs.word_count }}"
        text_chars: "{{ steps.analyze_text_detailed.outputs.character_count }}"
        unique_words: "{{ steps.analyze_text_detailed.outputs.unique_words }}"
        has_numbers: "{{ steps.analyze_text_detailed.outputs.has_numbers }}"
        calculated_value: "{{ steps.process_numbers.outputs.value }}"
        sum_value: "{{ steps.process_numbers_sum.outputs.value }}"
      outputs:
        text_analysis:
          type: object
          description: Text analysis summary
        number_analysis:
          type: object
          description: Number analysis summary
        summary:
          type: string
          description: Overall summary

  outputs:
    text_metrics: "{{ steps.analyze_text_detailed.outputs }}"
    number_results: "{{ steps.process_numbers.outputs }}"
    comprehensive_summary: "{{ steps.create_summary.outputs }}"
    basic_word_count: "{{ steps.analyze_text_basic.outputs.word_count }}"
    calculated_value: "{{ steps.process_numbers.outputs.value }}"