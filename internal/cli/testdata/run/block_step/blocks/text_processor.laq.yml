version: "1.0"
metadata:
  name: text-processor
  description: A reusable block for text processing
  author: lacquer-team

workflow:
  inputs:
    text:
      type: string
      description: Text to process
      required: true
    
    operation:
      type: string
      description: Operation to perform
      default: "uppercase"
      enum: ["uppercase", "lowercase", "reverse", "length"]

  steps:
    - id: process_text
      run: |
        #!/bin/bash
        text="$1"
        operation="$2"
        
        case "$operation" in
          "uppercase")
            result=$(echo "$text" | tr '[:lower:]' '[:upper:]')
            echo "{\"processed_text\": \"$result\", \"operation\": \"uppercase\", \"original_length\": ${#text}}"
            ;;
          "lowercase")
            result=$(echo "$text" | tr '[:upper:]' '[:lower:]')
            echo "{\"processed_text\": \"$result\", \"operation\": \"lowercase\", \"original_length\": ${#text}}"
            ;;
          "reverse")
            result=$(echo "$text" | rev)
            echo "{\"processed_text\": \"$result\", \"operation\": \"reverse\", \"original_length\": ${#text}}"
            ;;
          "length")
            echo "{\"processed_text\": \"$text\", \"operation\": \"length\", \"original_length\": ${#text}, \"length\": ${#text}}"
            ;;
          *)
            echo "{\"error\": \"Unknown operation: $operation\"}"
            exit 1
            ;;
        esac
      with:
        text: "{{ inputs.text }}"
        operation: "{{ inputs.operation }}"
      outputs:
        processed_text:
          type: string
          description: The processed text
        operation:
          type: string
          description: The operation that was performed
        original_length:
          type: number
          description: Length of the original text
        length:
          type: number
          description: Length result (only for length operation)

  outputs:
    result: "{{ steps.process_text.outputs.processed_text }}"
    operation_performed: "{{ steps.process_text.outputs.operation }}"
    text_length: "{{ steps.process_text.outputs.original_length }}"
    calculated_length: "{{ steps.process_text.outputs.length }}"